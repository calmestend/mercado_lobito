// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.906
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Home() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"carousel-container\"><div class=\"carousel\" id=\"carousel\"><div class=\"carousel-item\"><img src=\"/img/img1.jpeg\" alt=\"imagen carrusel 1\"></div><div class=\"carousel-item\"><img src=\"/img/img2.jpeg\" alt=\"imagen carrusel 2\"></div><div class=\"carousel-item\"><img src=\"/img/img3.jpeg\" alt=\"imagen carrusel 3\"></div><div class=\"carousel-item\"><img src=\"/img/img4.jpeg\" alt=\"imagen carrusel 4\"></div><div class=\"carousel-item\"><img src=\"/img/img5.jpeg\" alt=\"imagen carrusel 5\"></div><div class=\"carousel-item\"><img src=\"/img/img6.jpeg\" alt=\"imagen carrusel 6\"></div></div><button class=\"carousel-button carousel-button-prev\" id=\"prev\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"15 18 9 12 15 6\"></polyline></svg></button> <button class=\"carousel-button carousel-button-next\" id=\"next\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"9 18 15 12 9 6\"></polyline></svg></button><div class=\"indicators\" id=\"indicators\"></div></div><script>\nconst carousel = document.getElementById('carousel')\nconst prevBtn = document.getElementById('prev') \nconst nextBtn = document.getElementById('next') \nconst indicators = document.getElementById('indicators')\n\nlet currentIndex = 0\nconst items = document.querySelectorAll('.carousel-item')\nconst totalItems = items.length\n\n// Crear indicadores\nfor(let i = 0; i < totalItems; i++){\n  const dot = document.createElement('div')\n  dot.classList.add('indicator')\n  if (i === 0) dot.classList.add('active')\n  dot.addEventListener('click', () => goToSlide(i))\n  indicators.appendChild(dot) \n}\n\nfunction updateIndicators(){\n  document.querySelectorAll('.indicator').forEach((indicator, index) => { \n    indicator.classList.toggle('active', index === currentIndex) \n  })\n}\n\nfunction goToSlide(index){ \n  currentIndex = index\n  carousel.style.transform = `translateX(-${currentIndex * 100}%)`\n  updateIndicators() \n}\n\nfunction nextSlide(){\n  currentIndex = (currentIndex + 1) % totalItems\n  goToSlide(currentIndex)\n}\n\nfunction prevSlide(){\n  currentIndex = (currentIndex - 1 + totalItems) % totalItems \n  goToSlide(currentIndex)\n}\n\n\nnextBtn.addEventListener('click', nextSlide)\nprevBtn.addEventListener('click', prevSlide)\n\n\nsetInterval(nextSlide, 9000) // Cambia de imagen cada 9 segundos\n</script><section class=\"info-section\"><div class=\"info-container\"><div class=\"info-text\"><p>Descarga nuestro cat√°logo de productos.</p></div><div class=\"info-button\"><a href=\"emprendedores.html\" class=\"download-btn\"><img src=\"img/download.png\" alt=\"Download Icon\"> <span>Download</span></a></div></div></section>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
